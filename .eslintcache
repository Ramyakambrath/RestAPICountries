[{"C:\\react\\restcountriesapi\\src\\reportWebVitals.js":"1","C:\\react\\restcountriesapi\\src\\index.tsx":"2","C:\\react\\restcountriesapi\\src\\App.tsx":"3","C:\\react\\restcountriesapi\\src\\components\\Country.tsx":"4","C:\\react\\restcountriesapi\\src\\components\\Countries.tsx":"5","C:\\react\\restcountriesapi\\src\\components\\Dropdown.tsx":"6","C:\\react\\restcountriesapi\\src\\components\\DarkTheme.tsx":"7"},{"size":362,"mtime":1606246309763,"results":"8","hashOfConfig":"9"},{"size":500,"mtime":1606331251373,"results":"10","hashOfConfig":"9"},{"size":3843,"mtime":1606766498188,"results":"11","hashOfConfig":"9"},{"size":980,"mtime":1606766749164,"results":"12","hashOfConfig":"9"},{"size":502,"mtime":1606413701734,"results":"13","hashOfConfig":"9"},{"size":7238,"mtime":1606606075733,"results":"14","hashOfConfig":"9"},{"size":1449,"mtime":1606765631667,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"4v85jw",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\react\\restcountriesapi\\src\\reportWebVitals.js",[],["33","34"],"C:\\react\\restcountriesapi\\src\\index.tsx",[],["35","36"],"C:\\react\\restcountriesapi\\src\\App.tsx",["37","38","39"],"C:\\react\\restcountriesapi\\src\\components\\Country.tsx",[],"C:\\react\\restcountriesapi\\src\\components\\Countries.tsx",[],"C:\\react\\restcountriesapi\\src\\components\\Dropdown.tsx",["40","41","42","43","44","45","46","47"],"import React,{useRef, Fragment} from 'react';\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport { SvgIconProps } from '@material-ui/core';\r\n\r\ntype propT ={\r\n    ref:React.RefObject<HTMLInputElement>,\r\n    handler: (event:React.ChangeEvent<HTMLInputElement>) => React.ChangeEvent<HTMLInputElement>\r\n}\r\n\r\n// const useOnClickOutside=({ref,handler}:propT)=> {\r\n\r\n//     React.useEffect(()=>{\r\n//         const listener=(event:React.ChangeEvent<HTMLInputElement>)=>{\r\n\r\n//             // console.log('eee',ref.current )\r\n          \r\n//             if(!ref.current || ref.current.contains(event.target)){\r\n//             //    console.log('xx',event.target,ref.current)\r\n//                 return\r\n//             }\r\n\r\n//             handler(event)\r\n//             // console.log('yy',handler)\r\n\r\n//         }\r\n\r\n//         document.addEventListener('mousedown',listener);\r\n\r\n//         return()=>{\r\n//             document.removeEventListener('mousedown',listener);\r\n//         }\r\n//     },[ref,handler])\r\n    \r\n// }\r\n\r\ntype Props = {\r\n    items: Array<string>,\r\n    mousePosition:string,\r\n    dropDownField:string,\r\n    toggleDropdownStatus: () => void,\r\n    setSelectedValue: (index:number) => void,\r\n    toggleDropdownIconStatus: () => void,\r\n    setData: (value:string) => void\r\n\r\n  }\r\n\r\n\r\n\r\nconst ListValue = ({items,mousePosition, dropDownField,toggleDropdownStatus,setSelectedValue,toggleDropdownIconStatus,setData}:Props) => {\r\n \r\n  const [item, setSelectedItem] = React.useState<string>('');\r\n  const [filteredData,setFilteredData]= React.useState<string[]>(items);\r\n  const [showManageForm, setManageForm] = React.useState<boolean>(false);\r\n  const centerY = document.documentElement.clientHeight / 2;\r\n // const centerY = 1000;\r\n\r\n\r\n  const handleListItemClick=(index:number)=>{\r\n\r\n  \r\n    setSelectedValue(index);\r\n    toggleDropdownStatus();\r\n\r\n  }\r\n\r\n\r\n \r\n\r\n  const handleChange = (event:React.ChangeEvent<HTMLInputElement>) => {\r\n\r\n    setSelectedItem(event.target.value);\r\n    filteredList(event.target.value)\r\n\r\n  }\r\n  const filteredList=(data:string)=>{\r\n    let currentList=[];\r\n    let newList=[];\r\n  \r\n  \r\n    if(data !==\"\"){\r\n  \r\n        \r\n        currentList=items;\r\n       \r\n       \r\n        newList=currentList.filter(item=>{     \r\n             \r\n                return item.includes(data)\r\n           \r\n        })\r\n        \r\n  \r\n    }else{\r\n  \r\n        newList=items\r\n    }\r\n  \r\n    setFilteredData(newList)\r\n  \r\n   \r\n   \r\n  }\r\n\r\n  const handeManage=()=>{\r\n    \r\n    setManageForm(!showManageForm);\r\n    toggleDropdownIconStatus();\r\n\r\n  }\r\n\r\n  const handleCloseForm=()=>{\r\n    toggleDropdownStatus();\r\n\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n    \r\n    <div className='flex flex-column w-40 border-b-2 shadow-md mt-5px absolute z-1000 '>    \r\n      <ul className='w-full flex flex-col bg-white items-center top-0 left-0 .rounded '  >\r\n        <div className='max-h-275px w-full'>\r\n         {filteredData.map((item,index) => (\r\n          <li  className='hover:bg-purple-500 cursor-pointer hover:text-white pl-2 pt-2 pb-2 bg-white text-gray-500 text-xs' onClick={event => handleListItemClick( index)} key={index}>\r\n            {item}\r\n          </li>\r\n        ))}\r\n        </div>\r\n       \r\n      </ul>\r\n     \r\n    </div>\r\n   \r\n    </Fragment>\r\n  )\r\n\r\n}\r\n\r\ntype Properties = {\r\n    disabled:boolean,\r\n    items: Array<string>,\r\n    placeHolderValue:string,\r\n    customWidth:string,\r\n    dropDownField:string,\r\n    backgroundValue:string,\r\n    defaultValue:string,\r\n    setInputDropdownvalue:(value:string) => void\r\n  //  icon: (props: SvgIconProps) => JSX.Element;\r\n\r\n  }\r\n\r\nexport default function Dropdown({ disabled,dropDownField,items,placeHolderValue,customWidth,backgroundValue,defaultValue,setInputDropdownvalue}:Properties ) {\r\n  \r\n  const [data, setData] = React.useState<string>(defaultValue?defaultValue:'');\r\n  const [mousePosition, setmousePosition] = React.useState<string>('')\r\n\r\n  const [dropDownStatus, setDropdownStatus] = React.useState(false);\r\n  const [dropDownIconStatus, setDropdownIconStatus] = React.useState(false);\r\n  \r\n  React.useEffect(()=>{ \r\n\r\n  if(defaultValue!==undefined){\r\n\r\n    setData(defaultValue) \r\n  }\r\n\r\n    \r\n    return()=>{\r\n      \r\n    \r\n  }\r\n  },[defaultValue])\r\n\r\n  \r\n\r\n  const node = React.useRef<HTMLInputElement>(null);\r\n\r\n  const clearData=()=>{\r\n    setData('');\r\n    setInputDropdownvalue('')\r\n \r\n  }\r\n \r\n  const setSelectedValue=(index:number)=>{\r\n\r\n    setData(items[index])\r\n    setInputDropdownvalue(items[index])\r\n \r\n  }\r\n\r\n  const handleChange=(event:React.ChangeEvent<HTMLInputElement>)=>{\r\n   \r\n    setData(event.target.value)\r\n    setInputDropdownvalue(event.target.value)\r\n  }\r\n\r\n\r\n//   useOnClickOutside(node, (event:React.ChangeEvent<HTMLInputElement>) => {\r\n//     if(dropDownIconStatus && dropDownStatus)\r\n//     setDropdownStatus(false)});\r\n\r\n  const toggleDropdownStatus = () => {\r\n    // setAnchorEl(anchorEl ? null : event.currentTarget)\r\n    setDropdownStatus(!dropDownStatus);\r\n    toggleDropdownIconStatus();\r\n    ;\r\n  }\r\n  const toggleDropdownIconStatus = () => {\r\n\r\n    setDropdownIconStatus(!dropDownStatus);\r\n\r\n    \r\n  }\r\n\r\n const handleMouseMove=(event:React.MouseEvent)=>{\r\n  // console.log(e.clientY, e.target.offsetTop)\r\n  setmousePosition(event.clientY.toString())\r\n\r\n }\r\n  \r\n  const expandIcon =(!dropDownStatus || !dropDownIconStatus) ? <ExpandMoreIcon  className={`${backgroundValue} border-r-0 border-t-0 border-b-1 border-l-0 h-12` } onClick={toggleDropdownStatus} /> : <ExpandLessIcon className={`${backgroundValue} border-r-0 border-t-0 border-b-1 border-l-0 h-12` } onClick={toggleDropdownStatus} />\r\n  \r\n  const clearIcon =!dropDownStatus && data!=='' ?disabled === true ?<ClearIcon className={`${backgroundValue} border-r-0 border-t-0 border-b-1 border-l-0 h-12` }/>:<ClearIcon className={`${backgroundValue} border-r-0 border-t-0 border-b-1 border-l-0 h-12` } onClick={clearData} /> : null\r\n\r\n  return (\r\n     <div  ref={node} className={`${customWidth}`?`${customWidth}`:`null`}>\r\n     {/* <div className='flex border-b-1' onMouseMove={handleMouseMove} >    */}\r\n      <div className={` flex mt-8 ${backgroundValue} items-center w-full pt-1 h-12 focus:outline-none focus:ring-2 focus:ring-blue-400 focus:border-transparent border-b-2 shadow-md border-b-0`} onMouseMove={handleMouseMove} onClick={toggleDropdownStatus}>\r\n      <input\r\n        id={dropDownField}\r\n        type='text'\r\n        value={data}\r\n        placeholder={`${placeHolderValue}`?`${placeHolderValue}`:`null`}    \r\n        className={` text-xs p-2 w-full border-white ${backgroundValue} focus:outline-none ${disabled}?cursor-not-allowed:cursor-pointer` }\r\n        disabled={disabled? true: false}\r\n       onChange={handleChange}\r\n      /> \r\n       {clearIcon}\r\n       {expandIcon} \r\n      </div>\r\n     \r\n      {/* </div>    */}\r\n      {dropDownStatus?  <ListValue  items={items} dropDownField={dropDownField} toggleDropdownStatus={toggleDropdownStatus} setSelectedValue={setSelectedValue} toggleDropdownIconStatus={toggleDropdownIconStatus} mousePosition={mousePosition} setData={setData}/>:null}    \r\n    \r\n    </div>\r\n  )\r\n}\r\n","C:\\react\\restcountriesapi\\src\\components\\DarkTheme.tsx",[],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"48","replacedBy":"52"},{"ruleId":"50","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":45,"column":6,"nodeType":"56","endLine":45,"endColumn":40,"suggestions":"57"},{"ruleId":"54","severity":1,"message":"58","line":56,"column":6,"nodeType":"56","endLine":56,"endColumn":84,"suggestions":"59"},{"ruleId":"54","severity":1,"message":"60","line":84,"column":6,"nodeType":"56","endLine":84,"endColumn":24,"suggestions":"61"},{"ruleId":"62","severity":1,"message":"63","line":1,"column":15,"nodeType":"64","messageId":"65","endLine":1,"endColumn":21},{"ruleId":"62","severity":1,"message":"66","line":5,"column":10,"nodeType":"64","messageId":"65","endLine":5,"endColumn":22},{"ruleId":"62","severity":1,"message":"67","line":7,"column":6,"nodeType":"64","messageId":"65","endLine":7,"endColumn":11},{"ruleId":"62","severity":1,"message":"68","line":53,"column":10,"nodeType":"64","messageId":"65","endLine":53,"endColumn":14},{"ruleId":"62","severity":1,"message":"69","line":56,"column":9,"nodeType":"64","messageId":"65","endLine":56,"endColumn":16},{"ruleId":"62","severity":1,"message":"70","line":71,"column":9,"nodeType":"64","messageId":"65","endLine":71,"endColumn":21},{"ruleId":"62","severity":1,"message":"71","line":106,"column":9,"nodeType":"64","messageId":"65","endLine":106,"endColumn":20},{"ruleId":"62","severity":1,"message":"72","line":113,"column":9,"nodeType":"64","messageId":"65","endLine":113,"endColumn":24},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],["73"],["74"],"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'inputdropdownVal'. Either include it or remove the dependency array.","ArrayExpression",["75"],"React Hook React.useEffect has a missing dependency: 'countryList'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setFilteredCountryList' needs the current value of 'countryList'.",["76"],"React Hook React.useEffect has a missing dependency: 'searchCountry'. Either include it or remove the dependency array.",["77"],"@typescript-eslint/no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'SvgIconProps' is defined but never used.","'propT' is defined but never used.","'item' is assigned a value but never used.","'centerY' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'handeManage' is assigned a value but never used.","'handleCloseForm' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"78","fix":"79"},{"desc":"80","fix":"81"},{"desc":"82","fix":"83"},"Update the dependencies array to be: [countryList.length, inputdropdownVal, searchCountry]",{"range":"84","text":"85"},"Update the dependencies array to be: [countryList.length, searchCountry, inputdropdownVal, filteredCountryList.length, countryList]",{"range":"86","text":"87"},"Update the dependencies array to be: [inputdropdownVal, searchCountry]",{"range":"88","text":"89"},[1211,1245],"[countryList.length, inputdropdownVal, searchCountry]",[1746,1824],"[countryList.length, searchCountry, inputdropdownVal, filteredCountryList.length, countryList]",[2390,2408],"[inputdropdownVal, searchCountry]"]